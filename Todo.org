Todo

* RESUME
  --

* NOW
  - [ ] Make basic TODO app.
  - [ ] Accounts.
  - [X] Trash bin.
  - [X] Handle cycle actions from active TrashView.
  - [X] Show preview of notes on hovering over lists.
  - [X] Restore list.

* Visual design
  --

* UI/UX
  --

* Learn
  - [ ] GraphQL.
  - [ ] CSS Grid.
  - [ ] Django basics.

* TODO
  - [ ] Add persisted data layer (todo items).
  - [ ] Basic styling (CSS grid based, visually grid based).
  - [ ] Add networking layer.
    - [ ] Persistence.
    - [ ] CRUD operations.
  - [ ] Add linting.

* Features                                                        :IMPORTANT:
  - [ ] Prepend a line with '#' to make it a header line.
  - [ ] Full view mode. See all lists and all notes on the entire screen.
  - [ ] Route URLs to lists.
  - [ ] Add workspaces/tags/organization/etc.
  - [ ] Work on efficiency and test on large datasets (> 10k notes).

* Features                                                     :LOW_PRIORITY:
  - [ ] Undo/redo.
  - [ ] Drag-n-drop notes.
  - [ ] Change single-line <input> elements to multi-line editables.
  - [ ] Toasts
    - [ ] Animate sliding action.
    - [ ] Redo createToast interface for creation. A <ToastContainer>
      component should exist near the top level and accept actions to
      create new toasts. Use context api (probably).

* OPTIMIZATION
  - [ ] Improve react rendering performance and interop with redux
    (useMemo, useCallback).
